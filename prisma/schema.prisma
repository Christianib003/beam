// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  email             String   @unique
  name              String?
  password          String
  isAdmin           Boolean  @default(false)
  isEmailVerified   Boolean  @default(false)
  emailVerificationToken String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  verifications     UserVerification[]
}

model Verification {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  requiredDocs   String[] 
  isAutoApproved Boolean
  description    String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  users          UserVerification[]
}


model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserVerification {
  id              Int      @id @default(autoincrement())
  userId          Int
  verificationId  Int
  uploads         String[]
  status          Boolean? // null: pending, false: rejected, true: approved
  reason          String?
  requestChanges  String?
  changed         Boolean  @default(false)
  user            User     @relation(fields: [userId], references: [id])
  verification    Verification @relation(fields: [verificationId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}